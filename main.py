from telethon import TelegramClient, events
from telethon.tl.types import DocumentAttributeSticker, InputStickerSetID
from flask import Flask
from threading import Thread
import asyncio

# === Telegram API credentials ===
api_id = 22785739
api_hash = 'f96f6fc8bcbbe523dc93339fdd130b3c'

# –ù–∞–∑–≤–∞–Ω–∏–µ —Å–µ—Å—Å–∏–∏ (—Å–æ–∑–¥–∞—Å—Ç—Å—è —Ñ–∞–π–ª sticker_cleaner.session)
client = TelegramClient('sticker_cleaner', api_id, api_hash)

# === –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Ç–∞—Ä–≥–µ—Ç–∞ ===
target_username = 'Armoredb_user'
target_pack_id = 4798983069690233625
target_access_hash = -4231871290391784105

# === Flask —Å–µ—Ä–≤–µ—Ä ‚Äî –¥–ª—è Render ===
app = Flask(__name__)

@app.route('/')
def index():
    return "Telegram Sticker Cleaner is running."

def run_flask():
    app.run(host='0.0.0.0', port=8080)

# === –õ–æ–≥–∏–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Å—Ç–∏–∫–µ—Ä–æ–≤ ===
@client.on(events.NewMessage(incoming=True))
async def handle(event):
    sender = await event.get_sender()
    if sender.username == target_username and event.sticker:
        for attr in event.document.attributes:
            if isinstance(attr, DocumentAttributeSticker):
                sticker_set = attr.stickerset
                if isinstance(sticker_set, InputStickerSetID):
                    if (sticker_set.id == target_pack_id and
                        sticker_set.access_hash == target_access_hash):
                        await event.delete()
                        print(f"[LOG] –£–¥–∞–ª—ë–Ω —Å—Ç–∏–∫–µ—Ä –æ—Ç @{target_username} –∏–∑ —Ç–∞—Ä–≥–µ—Ç-–ø–∞–∫–∞.")

# === –û—Å–Ω–æ–≤–Ω–∞—è —Ç–æ—á–∫–∞ –≤—Ö–æ–¥–∞ ===
async def main():
    await client.start()
    print("üü¢ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ —Å–ª—É—à–∞–µ—Ç —Å–æ–±—ã—Ç–∏—è...")
    await client.run_until_disconnected()

if __name__ == "__main__":
    Thread(target=run_flask).start()
    asyncio.run(main())
